heres the code which you wall add into:

#include "mbed.h"

#define WAIT_TIME_MS 100 



// Instantiate a Serial object for communicating with the serial monitor
BufferedSerial pc(USBTX, USBRX, 115200);



//Modes Meter
AnalogIn potentiometer(PA_7);

//MultiLED
PwmOut redled(PB_3); //define PWM pins for RGB LED
PwmOut greenled(PB_5);
PwmOut blueled(PB_4);

//buttons from left to right
DigitalIn button1(PC_10);
DigitalIn button2(PC_11);
DigitalIn button3(PD_2);

//Buzzer speaker
PwmOut buzzer(PA_15);



//7-segment display:

//segment       A       B     C      D    E     F      G        
BusOut SegDis(PA_11,PA_12,PB_1,PB_15,PB_14,PB_12,PB_11);
DigitalOut decimal_point(PB_2);

//               0     1     2     3     4     5     6     7     8     9     A     b     C     d     E     F     G     H     i     J     L     n     O     P     r     S     t     U     Y
int hexDis[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x3D, 0x76, 0x30, 0x1E, 0x38, 0x54, 0x3F, 0x73, 0x50, 0x6D, 0x78, 0x3E, 0x6E};

int dp_status = 0;



int main() {


    while (1) {
        float potValue = potentiometer.read(); // read potentiometer value
        float red = redled.read();
        float green = greenled.read();
 

        if (potValue < 0.33) {
            SegDis.write(0x06);
        } else if (potValue >= 0.33 && potValue < 0.66) {
            SegDis.write(0x5B);
        } else {
            SegDis.write(0x4f); 
        }

        ThisThread::sleep_for(10ms);
    }
}
